server:
  port: 8081
  servlet:
    context-path: /

spring:
  main:
    allow-circular-references: true
    allow-bean-definition-overriding: true
    lazy-initialization: true
  application:
    name: auth-service
  datasource:
    url: jdbc:mysql://localhost:3306/fintrack_auth
    username: root
    password: 7008
    driver-class-name: com.mysql.cj.jdbc.Driver

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  # Flyway Configuration for DB migrations
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

  # Mail Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME:aniketsubudhi00}
    password: ${MAIL_PASSWORD:qcvubnmwtpfcxeev}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true

  # Security OAuth2 Configuration
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:612114749422-e4ut5hsmqij43cbmcksr454hchq598v8.apps.googleusercontent.com}
            client-secret: ${GOOGLE_CLIENT_SECRET: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}
            scope:
              - email
              - profile
            redirect-uri: http://localhost:8081/login/oauth2/code/google

# JWT Configuration
jwt:
  secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A713474375367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
  expiration: 3600000 # 1 hour
  refresh-token:
    expiration: 604800000 # 7 days

# Eureka Configuration
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    hostname: localhost
    prefer-ip-address: true

# Actuator for health checks and metrics
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always